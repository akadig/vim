" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

if has('win32')
    language messages en
    let vimfiles_dir=expand("$HOME/vimfiles/")
else
    language messages en_US.UTF-8
    let vimfiles_dir=expand("$HOME/.vim/")
endif

" from http://stevelosh.com/blog/2010/09/coming-home-to-vim/

filetype off
if filereadable(vimfiles_dir."autoload/pathogen.vim")
    call pathogen#helptags()
    call pathogen#runtime_append_all_bundles()
endif
filetype plugin indent on

" bit prevents some security exploits 
"set modelines=0
set modeline
set modelines=3

set ttyfast
set gdefault

if version >= 703
    set undofile
endif

set formatoptions=croql
set cinoptions=l1,g0,p0,t0,c0,(s,U1,m1

" save all at focus lost
au FocusLost * :wa

" end stevelosh

if has("vms")
    set nobackup    " do not keep a backup file, use versions instead
else
    set backup      " keep a backup file
endif
set history=250     " keep 250 lines of command line history
set ruler           " show the cursor position all the time

" Don't use Ex mode, use Q for formatting
map Q gq

set number
"set relativenumber

if has('win32') || has('gui')
    set t_Co=256    " –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª—å—à–µ —Ü–≤–µ—Ç–æ–≤ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
endif
if &t_Co > 2
    syntax enable
    set hlsearch
endif

if !(has('gui') || has('win32')) && filereadable(vimfiles_dir.'bundle/robokai/colors/robokai.vim')
    colorscheme robokai
    highlight Normal  ctermfg=gray   ctermbg=black guifg=#c0c0c0 guibg=#000040          
    if &term == "xterm"
        highlight StatusLine ctermfg=black ctermbg=white term=bold
    else
        highlight StatusLine ctermfg=black term=bold
    endif
    " from darkblue
    hi Visual		guifg=#8080ff guibg=fg		gui=reverse				ctermfg=lightblue ctermbg=fg cterm=reverse
    hi VisualNOS	guifg=#8080ff guibg=fg		gui=reverse,underline	ctermfg=lightblue ctermbg=fg cterm=reverse,underline
    "
    highlight Class ctermfg=DarkYellow
    highlight LocalVariable ctermfg=DarkGrey
    
elseif has('gui') && filereadable(vimfiles_dir.'bundle/darkz/colors/darkz.vim')
    colorscheme darkz
elseif has('gui') && filereadable(vimfiles_dir.'bundle/lucius/colors/lucius.vim')
    colorscheme lucius
elseif filereadable(expand("$VIMRUNTIME/colors/darkblue.vim"))
    colorscheme darkblue
    " –Ω–µ–º–Ω–æ–≥–æ "–¥–æ–≤–µ–¥–µ–º –¥–æ —É–º–∞" —Å—Ö–µ–º—É
    if has('gui')
        highlight StatusLine ctermfg=black ctermbg=blue term=bold guifg=darkblue guibg=darkgrey gui=bold
    else
        if !has('win32')
            if &term == "xterm"
                highlight StatusLine ctermfg=blue term=bold
            else
                highlight StatusLine ctermfg=black term=bold
            endif
        endif
        highlight Comment term=bold ctermfg=3 gui=italic guifg=gray50 
    endif
    highlight lCursor ctermfg=yellow ctermbg=red   guifg=NONE    guibg=cyan
endif

" –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–±—ã –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏ —Ç–æ—á–∫–∞–º–∏
"set listchars=tab:¬∑¬∑i
"set listchars=tab:¬ª\ ,trail:¬∑,eol:¬∂
"set list

" change rus-las with Ctrl-^
if filereadable(expand("$VIMRUNTIME/keymap/russian-jcukenwin.vim"))
    set keymap=russian-jcukenwin
endif
"setlocal spell spelllang=ru_yo,en_us
" —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ø–µ–ª–ª-—á–µ–∫–µ—Ä–∞ (–≤–∑—è—Ç–æ —Å www.opennet.ru/base/X/vim_orfo.txt.html)
if version >= 700 && has("spell")
"   –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –≤—ã–∫–ª—é—á–µ–Ω–∞.
    setlocal spell spelllang=
    setlocal nospell
    "
    function ChangeSpellLang()
        if &spelllang =~ "en_us"
            setlocal spell spelllang=ru
            echo "spelllang: ru"
        elseif &spelllang =~ "ru"
            setlocal spell spelllang=
            setlocal nospell
            echo "spelllang: off"
        else
            setlocal spell spelllang=en_us
            echo "spelllang: en"
        endif
    endfunc

    " map spell on/off for English/Russian
    map <F11> <Esc>:call ChangeSpiellLang()<CR>
    " limit it to just the top 10 items
    set sps=best,10 
endif
" –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ª–∞—Ç–∏–Ω—Å–∫–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞
set iminsert=0
" –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∏—Å–∫ –ª–∞—Ç–∏–Ω–∏—Ü–µ–π
set imsearch=0
set tabstop=4
set shiftwidth=4
set autoindent smartindent
set smarttab
set expandtab
" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" –≥—Ä–∞–Ω–∏—Ü–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞
set wrapmargin=5
" –ø–æ–¥—Å–≤–µ—Ç–∏–º 85—é –∫–æ–ª–æ–Ω–∫—É
if version >= 703
    set colorcolumn=85
endif
" –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–Ω–æ—Å –ø–æ—Å–ª–µ 128 –∫–æ–ª–æ–Ω–∫–∏
set textwidth=128
" —Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–µ
set scrolloff=4
" –ø–æ–¥—Å–≤–µ—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–ª–æ–Ω–∫–∏ –∫—É—Ä—Å–æ—Ä–∞
if version >= 700
    set cursorline
endif
"set cursorcolumn
set visualbell
" –º–∏–Ω–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –æ–∫–Ω–∞
set winminheight=1
" –¥–µ–ª–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–æ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
set noequalalways
set winheight=999

set incsearch        " do incremental searching
set ignorecase
set smartcase

" http://dimio-blog.livejournal.com/16376.html

set hidden          " –Ω–µ –≤—ã–≥—Ä—É–∂–∞—Ç—å –±—É—Ñ–µ—Ä –∫–æ–≥–¥–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—à—å—Å—è –Ω–∞ –¥—Ä—É–≥–æ–π
if has("mouse")
    set mouse=a         " –≤–∫–ª—é—á–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –º—ã—à–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ (–±–µ–∑ GUI)
    set mousehide       " —Å–∫—Ä—ã–≤–∞—Ç—å –º—ã—à—å –≤ —Ä–µ–∂–∏–º–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
endif
set showcmd         " –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ —Å—Ç–∞—Ç—É—Å–±–∞—Ä–µ (–∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–≤–æ–¥–∞)
set matchpairs+=<:> " –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏ –¥–ª—è HTML-—Ç–µ–≥–æ–≤
set showmatch       " –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–µ—Ä–≤—É—é –ø–∞—Ä–Ω—É—é —Å–∫–æ–±–∫—É –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –≤—Ç–æ—Ä–æ–π
set autoread        " –ø–µ—Ä–µ—á–∏—Ç—ã–≤–∞—Ç—å –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
set confirm         " –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥–∏ –≤–º–µ—Å—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö

" –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VIM –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
autocmd! BufWritePost $MYVIMRC source $MYVIMRC

" –ü—Ä—ã–≥–∞—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –ø–æ–∑–∏—Ü–∏—é –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –±—É—Ñ–µ—Ä–∞
autocmd! BufReadPost * call LastPosition()
autocmd! BufReadPost * call UpdateFileInfo()
"
function! LastPosition()
    " –Ω–µ –º–µ–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –ø—Ä–∏ –∫–æ–º–º–∏—Ç–µ 
    if expand("<afile>:s? \d+??") != '.git\COMMIT_EDITMSG'
        if expand("<afile>:t") != ".git" && line("'\"")<=line('$')
            normal! `"
        endif
    endif
endfunction

function! UpdateFileInfo()
    if exists("g:loaded_ctags_highlighting")
        UpdateTypesFile
    endif
endfunction

if version >= 700
    " –æ–ø—Ü–∏–∏ —Å–µ—Å—Å–∏–π - –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ç–µ–∫—É—â–∏—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±—É—Ñ–µ—Ä—ã –∏ —Ç–∞–±—ã
    set sessionoptions=curdir,buffers,help,options,resize,slash,tabpages,winpos,winsize 
else
    set sessionoptions=curdir,buffers,help,options,resize,slash,winpos,winsize
endif

" –ü—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç—Å—Ç—É–ø—ã
"set pastetoggle=

"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞ (—Ñ–æ–ª–¥–∏–Ω–≥)
set foldenable " –≤–∫–ª—é—á–∏—Ç—å —Ñ–æ–ª–¥–∏–Ω–≥
set foldmethod=syntax " –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –±–ª–æ–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —Ñ–∞–π–ª–∞
set foldcolumn=3 " –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–æ—Å—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ–º
set foldlevel=7 " –ü–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä—ã—Ç, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–∫—Ä—ã—Ç—ã
let perl_folding=1 " –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–π Perl
"let php_folding=1 " –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–π PHP
"set foldopen=all " –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Å–≤–µ—Ä—Ç–æ–∫ –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ –≤ –Ω–∏—Ö

nnoremap    -   zc
nnoremap    +   zo

" –î–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤ –æ—Ç–∫–ª—é—á–∞–µ—Ç –∑–∞–º–µ–Ω—É —Ç–∞–±–æ–≤ –ø—Ä–æ–±–µ–ª–∞–º–∏ –∏ –º–µ–Ω—è–µ—Ç —à–∏—Ä–∏–Ω—É –æ—Ç—Å—Ç—É–ø–∞
au FileType crontab,fstab,make set noexpandtab tabstop=8 shiftwidth=8

"" –ü—Ä–∏–º–µ–Ω—è—Ç—å —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤
filetype on
filetype plugin on
filetype indent on
"" –ï—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º—ã–π —Ñ–∞–π–ª —è–≤–ª—è–µ—Ç—Å—è —Ñ–∞–π–ª–æ–º —Å–∫—Ä–∏–ø—Ç–∞ - —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
"" au BufWritePost * if getline(1) =~ "^#!.*/bin/"|silent !chmod a+x %|endif
"" –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞ –∑–∞–¥–∞–≤–∞—Ç—å –¥–ª—è –Ω–µ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π '–∫–æ–º–ø–∏–ª—è—Ç–æ—Ä'
autocmd! BufEnter *.pl compiler perl

"" –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–æ–∫ —Ñ–∞–π–ª–∞
set wildmenu
set wcm=<Tab>
menu Encoding.CP1251   :e ++enc=cp1251<CR>
menu Encoding.CP866    :e ++enc=cp866<CR>
menu Encoding.KOI8-U   :e ++enc=koi8-u<CR>
menu Encoding.UTF-8    :e ++enc=utf-8<CR>
map <F8> :emenu Encoding.<TAB>

" end dimio-blog

set lazyredraw

"set encoding=cp1251
"set termencoding=utf-8
set fileencodings=utf-8,cp1251,koi8-r,cp866
set fileformats=unix,dos,mac " —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–≤–ª–∏—è–µ—Ç –Ω–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ç—Ä–æ–∫) - –±—É–¥–µ—Ç –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å—Å—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ

" –õ–æ–≤–ª—è –∏–º–µ–Ω–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–∑ vim'–∞. (^[ –≤–≤–æ–¥–∏—Ç—Å—è –∫–∞–∫ Ctrl+V Esc)
set title
"set titlestring=%t-dsd
"set titleold=&titlestring
" screen:
"set titlestring=%t
"set titleold=bash
let &titlestring = "vim (" . expand("%:t") . ")"
if &term == "screen"
    set t_ts=k
    set t_fs=\
endif
if &term == "screen" || &term == "xterm"
    set title
endif

autocmd! BufEnter * call NextTabOpened()
"
function! NextTabOpened()
    let &titlestring = "vim (" . expand("%:t") . ")"
endfunction

if !has("gui_running")
    set mouse=a
endif

if has('gui')
    " For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
    if has('win32')
        let &guioptions = substitute(&guioptions, "t", "", "g")
    endif
    set guioptions-=T " –æ—Ç–∫–ª—é—á–∏—Ç—å —Ç—É–ª–±–∞—Ä –≤ GUI
    "set guioptions-=m " –æ—Ç–∫–ª—é—á–∏—Ç—å –º–µ–Ω—é  
    au GUIEnter * :set lines=99999 columns=99999
endif
" –í —Ä–∞–∑–Ω—ã—Ö –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã:
if has('win32')
    set guifont=Lucida_Console:h11:cRUSSIAN::
    behave xterm
else
    set guifont=Terminus\ 14
endif

" —Å–æ—Ö—Ä–∞–Ω—è–µ–º—Å—è –ø–æ F2
nmap <F2> <ESC>:w<CR>
imap <F2> <ESC>:w<CR>i<Right>
" F6/F7 - –ø—Ä–µ–¥—ã–¥—É—â–∞—è/—Å–ª–µ–¥—É—é—â–∞—è –æ—à–∏–±–∫–∞
nmap <F6> <ESC>:cp<CR>
imap <F6> <ESC>:cp<CR>
nmap <F7> <ESC>:cn<CR>
imap <F7> <ESC>:cn<CR>
" ?
inoremap <silent> <C-u> <ESC>u:set paste<CR>.:set nopaste<CR>gi

function! SyntaxItem()
    return synIDattr(synID(line("."),col("."),1),"name")
endfunction

if has('statusline')
    set statusline=%f\                  " filename
    set statusline+=%L                  " lines in buffer
    set statusline+=%y                  " type of file 
    set statusline+=%r\                 " read-only flag
    set statusline+=[%{&ff}]            " file type - unix/win e.t.c.
    set statusline+=[%{&fenc}]\         " file encoding
    set statusline+=%{SyntaxItem()}     " syntax item
    set statusline+=%=%m\               " modified flag
    set statusline+=%-15(0x%02B\ (%b)%) " byte under cursor, hex+decimal
    set statusline+=%-15(%l,%c%V%)      " line number + column/virtual column 
    set statusline+=%P                  " percentage
endif
" %{GitBranch()}\ 
set laststatus=2

" tab navigation like firefox
if version >= 700
    nmap <C-S-Tab> :tabprevious<cr>
    nmap <C-Tab> :tabnext<cr>
    map <C-S-Tab> :tabprevious<cr>
    map <C-Tab> :tabnext<cr>
    imap <C-S-Tab> <ESC>:tabprevious<cr>i
    imap <C-Tab> <ESC>:tabnext<cr>i
    nnoremap <C-n> :tabnew<cr>
    inoremap <C-t> <ESC>:tabnew<cr>
"    nnoremap <C-S-w> :tabclose<cr>
    inoremap <C-w> <ESC>:tabclose<cr>
    nmap Z :tabprev<cr>
    nmap X :tabnext<cr>
endif

"ino <tab> <c-r>=TriggerSnippet()<cr>
"snor <tab> <esc>i<right><c-r>=TriggerSnippet()<cr>

" —Ö—Ä–∞–Ω–∏—Ç—å swap-—Ñ–∞–π–ª—ã –±—É–¥–µ–º –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª–∏—Å—å
let swap_dir=vimfiles_dir.'swapfiles/'

if !isdirectory(swap_dir) && exists('*mkdir')
    call mkdir(swap_dir)
endif

if isdirectory(swap_dir)
    let &directory=swap_dir.'/'
endif

" dvg - end
" vim: ts=4 sw=4
" end of file
